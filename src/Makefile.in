CXX= mpicxx
CC= mpicc -std=c99
FFT = @FFT_SOLVER@
MACHINE = @MACHINE@
EXE = ../exe/c2c_$(FFT)
#OBJ = c2c_$(FFT).o
OBJ = c2c_test.o

LIB_FFTW = -lfftw3_mpi -lfftw3_omp -lfftw3 -lmpi
ifeq ($(MACHINE),local)
  FFTW_INC =/u/cgkim/.local/include
  FFTW_LIB =/u/cgkim/.local/lib
else ifeq ($(MACHINE),tigress)
  FFTW_INC =/tigress/changgoo/local/include
  FFTW_LIB =/tigress/changgoo/local/lib
else ifeq ($(MACHINE),pleiades)
  FFTW_INC = /nasa/intel/Compiler/2016.2.181/mkl/include/fftw
  FFTW_LIB =
  LIB_FFTW = -mkl -lmpi
  CC = icc
else
  FFTW_INC =/tigress/changgoo/local/include
  FFTW_LIB =/tigress/changgoo/local/lib
endif
INC = -I$(FFTW_INC)

ifeq ($(FFT),accfft)
  LIB_FFT = -laccfft
  CC=mpicxx
else ifeq ($(FFT),openfft)
  LIB_FFT = -lopenfft
else ifeq ($(FFT),pfft)
  LIB_FFT = -lpfft
else ifeq ($(FFT),fftp)
  INC += -I./fft_plimpton
  OBJ += $(FFT_OBJ)
  LIB_FFT = -L./fft_plimpton -lfftp
else
  LIB_FFT = 
endif
LIB = -L$(FFTW_LIB) $(LIB_FFT) $(LIB_FFTW)
OPT = -O3 -fopenmp

#-------------------  macro definitions  ---------------------------------------

SRC = $(OBJ:.o=.c)
ifeq ($(CC),mpicxx)
  SRC = $(OBJ:.o=.cpp)
endif

#--------------------  implicit rules  -----------------------------------------

.cpp.o:
	${CC} ${INC} -c $<

.c.o:
	${CC} ${INC} -c $<


#---------------------  targets  -----------------------------------------------

all:    compile

.PHONY: compile
compile: ${EXE}

${EXE}: ${OBJ}
	${CC} $(OPT) -o ${EXE} ${OBJ} ${LIB}

help:
	@echo This is the FFT Makefile
	@echo Type 'make compile' to generate FFT object files
	@echo Type 'make clean'   to remove '*.o' files
	@echo OBJ=$(OBJ)

.PHONY: clean
clean:
	rm -f *.o
